plugins {
    id 'org.springframework.boot' version '2.5.8'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'java'
    id 'idea'
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

group = 'com.paladin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

compileJava.options.encoding("UTF-8")
compileTestJava.options.encoding("UTF-8")

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    //remove default logger
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

//task('helloworld', { println('helloworld') })

ext {
//	set('snippetsDir', file("build/generated-snippets"))
//	set('springBootAdminVersion', "2.2.3")
    set('springCloudVersion', "Hoxton.SR6")
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation group: 'com.redislabs', name: 'jrebloom', version: '2.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation 'org.springframework.boot:spring-boot-starter-aop'

	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//	implementation 'de.codecentric:spring-boot-admin-starter-client'
//	implementation 'de.codecentric:spring-boot-admin-starter-server'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'
    implementation 'com.baomidou:mybatis-plus-boot-starter:3.4.0'
    implementation 'com.baomidou:mybatis-plus-generator:3.4.0'
    implementation group: 'com.baomidou', name: 'dynamic-datasource-spring-boot-starter', version: '3.5.0'
    implementation 'com.ibeetl:beetl:3.1.8.RELEASE'

//	implementation 'com.alibaba:druid-spring-boot-starter:1.1.23'
//	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-zuul'
//	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.3.3.RELEASE'

    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.11.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.1'
    implementation 'com.github.xiaoymin:knife4j-spring-boot-starter:2.0.4'
	implementation 'com.github.pagehelper:pagehelper-spring-boot-starter:1.3.0'
    implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'commons-fileupload:commons-fileupload:1.4'
    implementation 'org.apache.poi:poi-ooxml:4.1.2'
    implementation 'net.coobird:thumbnailator:0.4.12'

    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor('org.mapstruct:mapstruct-processor:1.4.2.Final')

    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
    implementation group: 'com.spring4all', name: 'swagger-spring-boot-starter', version: '2.0.2.RELEASE'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'

    annotationProcessor('org.projectlombok:lombok:1.18.12')
    compileOnly('org.projectlombok:lombok:1.18.12')
    implementation group: 'cn.smallbun.screw', name: 'screw-core', version: '1.0.5'
    testAnnotationProcessor('org.projectlombok:lombok:1.18.12')
    testCompileOnly('org.projectlombok:lombok:1.18.12')

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
    imports {
//		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
//		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
//	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
//	inputs.dir snippetsDir
//	dependsOn test
}

allprojects {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        maven {
            url 'https://maven.aliyun.com/repository/spring/'
        }
        mavenLocal()
        mavenCentral()
    }
}

//repositories {
//	mavenCentral()
//}